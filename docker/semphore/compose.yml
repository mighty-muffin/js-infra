---
name: semaphore

volumes:
  semaphore-db:
    driver: local

networks: # docker network create proxy
  proxy:
    name: proxy
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: proxy
    external: true

services:
  postgres:
    container_name: postgres
    image: docker.io/postgres:14
    restart: unless-stopped
    hostname: postgres
    volumes: 
     - semaphore-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB= ${POSTGRES_DB}
      - POSTGRES_PASSWORD= ${POSTGRES_PASSWORD}
      - POSTGRES_USER= ${POSTGRES_USER}
  semaphore:
    container_name: semaphore
    image: docker.io/semaphoreui/semaphore:v2.15.0
    restart: unless-stopped
    depends_on:
      - postgres
    # networks:
    #   - proxy
    ports:
      - 3000:3000
    volumes:
      - "./config:/etc/semaphore"
    environment:
      - SEMAPHORE_ADMIN_EMAIL= ${SEMAPHORE_ADMIN_EMAIL}
      - SEMAPHORE_ADMIN_NAME= ${SEMAPHORE_ADMIN_NAME}
      - SEMAPHORE_ADMIN_PASSWORD= ${SEMAPHORE_ADMIN_PASSWORD}
      - SEMAPHORE_ADMIN= ${SEMAPHORE_ADMIN}
      - SEMAPHORE_DB_DIALECT= ${SEMAPHORE_DB_DIALECT}
      - SEMAPHORE_DB_HOST= postgres
      - SEMAPHORE_DB_PORT= 5432
      - SEMAPHORE_DB= ${POSTGRES_DB}
      - TZ= UTC
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.semaphore.entrypoints=https"
    #   - "traefik.http.routers.semaphore.rule=Host(`semaphore.local.mighty-muffin.io`)"
    #   - "traefik.http.routers.semaphore.service=semaphore"
    #   - "traefik.http.routers.semaphore.tls=true"
    #   - "traefik.http.services.semaphore.loadbalancer.server.port=3000"
